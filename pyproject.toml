[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "value-analysis-tool"
version = "1.0.0"
description = "AI-Powered Financial Analysis Tool using CrewAI"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = [
    "financial-analysis",
    "ai",
    "crewai", 
    "llm",
    "investment",
    "valuation",
    "eps",
    "roe"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "crewai>=0.148.0",
    "crewai-tools>=0.51.1",
    "openai>=1.97.0",
    "litellm>=1.67.0",
    "perplexityai>=0.12.0",
    "langchain>=0.3.25",
    "langchain-core>=0.3.63",
    "langchain-openai>=0.2.14",
    "PyMuPDF>=1.26.3",
    "python-docx>=1.2.0",
    "pandas>=2.3.1",
    "numpy>=1.26.4",
    "chromadb>=0.5.10",
    "requests>=2.32.4",
    "httpx>=0.28.1",
    "python-dotenv>=1.1.1",
    "pydantic>=2.11.7",
    "json5>=0.12.0",
    "python-dateutil>=2.9.0",
    "regex>=2024.11.6",
    "tiktoken>=0.7.0",
    "typing_extensions>=4.14.1",
    "colorama>=0.4.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "flake8>=4.0",
    "isort>=5.0",
    "mypy>=0.950",
    "pre-commit>=2.0",
]
full = [
    "torch>=1.9.0",
    "transformers>=4.0.0",
    "sentence-transformers>=2.0.0",
    "scikit-learn>=1.0.0",
    "matplotlib>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/your-username/Value_Analysis"
Documentation = "https://github.com/your-username/Value_Analysis#readme"
Repository = "https://github.com/your-username/Value_Analysis"
"Bug Tracker" = "https://github.com/your-username/Value_Analysis/issues"

[project.scripts]
value-analysis = "Value_AnalysisGUI:main"

[tool.setuptools.packages.find]
include = ["*"]

[tool.setuptools.package-data]
"*" = ["*.md", "*.txt", "*.yml", "*.yaml"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["value_analysis"]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

# Coverage configuration
[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
